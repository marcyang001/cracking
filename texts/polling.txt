long-polling vs webSockets vs Server-Sent Events

- they are popular communication protocols between a client like a web browser and a web server. First, lets start with understanding what a standard HTTP web request 

HTTP request: 
	- client opens a connectiokn and requests data from the server 
	- the server calculates the response. 
	- the server sends the response back to the client on the opened request. 

Ajax polling: 
=============

polling is a standard technique used by the vast majority of AJAX applications. 
- client repeatedly polls (or requests) a server for data. 

	1. Client opens a connection and requests data from the server using regular HTTP. 
	2. The requested webpage sends requests to the server at regular intervals (e.g. 0.5 seconds)
	3. the server calculates the response and sends it back, just like regular HTTP traffice . 
	4. Client repeats the above three steps periodically to get updates from the server. 

Problem with polling is that client has to keep asking the server for any new data. As a result, a lot of responses are EMPTY creating HTTP overhead. 


HTTP Long-Polling 
=================

Server pushes the data to the client whenever the data is availalbe. 

With long-polling, the client requests information from the server exactly as in normal polling, but with the expectation that the server may not respond immediately.
==> Hanging GET

	- if the server does not have any data available for the client, instead of sending an empty response, the server holds the request and waits until some data becomes available. 

	- once the data becomes available, a full response is sent to the client. The client then immediately re-request information from the server so that the server will almost always have an available waiting request that it can use to deliver data in response to an event. 

The basic life cycle of an application using HTTP Long-Polling: 

	1. the client makes an initial request using regular HTTP and then waits for a response. 
	2. the server delays its reponse until an update is available, or until a timeout has occurred. 
	3. When an update available, the server sends a full response to the client. 
	4. The client typically sends a new long-poll request
	5. each long poll request has a timeout. the client has to reconnect periodically after the connection is closed, due to timeouts. 



